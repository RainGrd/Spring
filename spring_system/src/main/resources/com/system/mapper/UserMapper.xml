<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
      mapper为映射的根节点，用来管理DAO接口
      namespace指定DAO接口的完整类名，表示mapper配置文件管理哪个DAO接口(包.接口名)
      mybatis会依据这个接口动态创建一个实现类去实现这个接口，而这个实现类是一个Mapper对象
   -->
<mapper namespace="com.system.mapper.UserMapper">
    <!--起别名-->
    <!--
          id = "接口中的方法名"
          parameterType = "接口中传入方法的参数类型"
          resultType = "返回实体类对象：包.类名"  处理结果集 自动封装
          注意:sql语句后不要出现";"号
              查询：select标签
              增加：insert标签
              修改：update标签
              删除：delete标签
      -->
    <select id="findAllByUser" resultType="user">
        SELECT *
        FROM t_user user
        <where>
            del_status=0
            <if test="username!=null and username!=''">
                and username like CONCAT('%',#{user.username},'%')
            </if>
            <if test="email!=null and emil!=''">
                and email =#{user.email}
            </if>
            <if test="phoneNum!=null and phoneNum!=''">
                and phoneNum =#{user.phoneNum}
            </if>
            <if test="birthDay!=null and birthDay!=''">
                and birthDay = #{user.birthDay}
            </if>
        </where>
    </select>
    <!--用于查询页面条数的-->
    <select id="findCountByUser" resultType="_int">
        SELECT count(*)
        FROM t_user user
        <where>
            del_status=0
            <if test="username!=null and username!=''">
                and username like CONCAT('%',#{user.username},'%')
            </if>
            <if test="email!=null and emil!=''">
                and email =#{user.email}
            </if>
            <if test="phoneNum!=null and phoneNum!=''">
                and phoneNum =#{user.phoneNum}
            </if>
            <if test="birthDay!=null and birthDay!=''">
                and birthDay = #{user.birthDay}
            </if>
        </where>
    </select>
    <select id="findRoleList" resultType="role">
        select role.roleName, role.roleDesc
        from t_role role
                 join t_user_role tur on role.id = tur.roleId
        where tur.userId = #{userId}
    </select>
    <select id="login" resultType="user">
        select *
        from t_user
        where username = #{username}
          and password = #{password};
    </select>
</mapper>